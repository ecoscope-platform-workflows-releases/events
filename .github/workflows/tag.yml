name: Tag

on:
  push:
    branches: ["*"]

jobs:
  generate-tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.create_tag.outputs.result }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # get existing tags
      - name: List existing tags
        run: |
          git tag -l
      - name: Get workflow id from spec.yaml
        id: get_workflow_id
        uses: mikefarah/yq@v4
        with:
          cmd: yq -r '.id' spec.yaml
      - name: Transform workflow id to workflow directory name
        id: workflow_directory
        run: |
          export WORKFLOW_NAME=$(echo "${{ steps.get_workflow_id.outputs.result }}" | tr '[:upper:]' '[:lower:]' | sed 's/_/-/g')
          echo "name=ecoscope-workflows-${WORKFLOW_NAME}-workflow" >> $GITHUB_OUTPUT
      - name: Create tag from VERSION.yaml
        id: create_tag
        uses: mikefarah/yq@v4
        with:
          cmd: yq -r '"v" + (.MAJ | tostring) + "." + (.MIN | tostring) + "." + (.PATCH | tostring)' ${{ steps.workflow_directory.outputs.name }}/VERSION.yaml
      - name: Validate tag doesn't already exist
        run: |
          if git tag -l | grep -q "${{ steps.create_tag.outputs.result }}"; then
            echo "Tag ${{ steps.create_tag.outputs.result }} already exists. Exiting."
            exit 1
          else
            echo "Tag ${{ steps.create_tag.outputs.result }} does not exist. Proceeding."
          fi
  cut-release:
    needs: generate-tag
    # only actually cut a tag + release on push to main or patch branches;
    # this avoids mutating PR branches (which generate push events when commits are pushed to them )
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/patch-'))
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # get existing tags
      - name: List existing tags
        run: |
          git tag -l
      - name: Tag
        run: |
          echo "Tagging version ${{ needs.generate-tag.outputs.tag }}"
          git tag ${{ needs.generate-tag.outputs.tag }}
          git tag -l
      - name: Push tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git push origin --tags
      - name: Create GitHub Release
        env:
          GH_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          '${{ needs.generate-tag.outputs.tag }}'
          --repo '${{ github.repository }}'
          --generate-notes
