# AUTOGENERATED BY ECOSCOPE-WORKFLOWS; see fingerprint in README.md for details


from __future__ import annotations

from enum import Enum
from typing import List, Optional, Union

from pydantic import AwareDatetime, BaseModel, ConfigDict, Field


class WorkflowDetails(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    name: str = Field(..., description="The name of your workflow", title="Name")
    description: str = Field(..., description="A description", title="Description")
    image_url: Optional[str] = Field("", description="An image url", title="Image Url")


class TimeRange(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    since: AwareDatetime = Field(..., description="The start time", title="Since")
    until: AwareDatetime = Field(..., description="The end time", title="Until")


class GetEventsData(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    event_types: List[str] = Field(
        ..., description="list of event types", title="Event Types"
    )


class TimeInterval(str, Enum):
    year = "year"
    month = "month"
    week = "week"
    day = "day"
    hour = "hour"


class EventsBarChart(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    time_interval: TimeInterval = Field(
        ..., description="Sets the time interval of the x axis.", title="Time Interval"
    )


class EventsMeshgrid(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    cell_width: Optional[int] = Field(
        10000, description="The width of a grid cell in meters.", title="Cell Width"
    )
    cell_height: Optional[int] = Field(
        10000, description="The height of a grid cell in meters.", title="Cell Height"
    )


class EarthRangerConnection(BaseModel):
    name: str = Field(..., title="Connection Name")


class Grouper(BaseModel):
    index_name: str = Field(..., title="Index Name")


class TemporalGrouper(BaseModel):
    temporal_index: str = Field(..., title="Temporal Index")


class Coordinate(BaseModel):
    x: float = Field(..., title="X")
    y: float = Field(..., title="Y")


class ErClientName(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    data_source: EarthRangerConnection = Field(
        ...,
        description="Select one of your configured data sources by name.",
        title="Data Source",
    )


class Groupers(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    groupers: Optional[List[Union[Grouper, TemporalGrouper]]] = Field(
        None,
        description="            Temporal index(es) and/or column(s) to group by. This field is optional.\n            If left unfilled, all data will be presented together in a single group.\n            ",
        title="Groupers",
    )


class FilterEvents(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    min_x: Optional[float] = Field(-180.0, title="Min X")
    max_x: Optional[float] = Field(180.0, title="Max X")
    min_y: Optional[float] = Field(-90.0, title="Min Y")
    max_y: Optional[float] = Field(90.0, title="Max Y")
    filter_point_coords: Optional[List[Coordinate]] = Field(
        [], title="Filter Point Coords"
    )


class Params(BaseModel):
    model_config = ConfigDict(
        extra="forbid",
    )
    workflow_details: Optional[WorkflowDetails] = Field(
        None, title="Set Workflow Details"
    )
    er_client_name: Optional[ErClientName] = Field(
        None, title="Select EarthRanger Data Source"
    )
    groupers: Optional[Groupers] = Field(None, title="Set Groupers")
    time_range: Optional[TimeRange] = Field(None, title="Set Time Range Filters")
    get_events_data: Optional[GetEventsData] = Field(
        None, title="Get Events from EarthRanger"
    )
    filter_events: Optional[FilterEvents] = Field(
        None, title="Apply Relocation Coordinate Filter"
    )
    events_bar_chart: Optional[EventsBarChart] = Field(
        None, title="Draw Time Series Bar Chart for Events"
    )
    events_meshgrid: Optional[EventsMeshgrid] = Field(
        None, title="Create Events Meshgrid"
    )
